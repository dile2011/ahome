//
//  AMenuPanelController.m
//  demoe
//
//  Created by andson-dile on 15/3/12.
//  Copyright (c) 2015å¹´ andson. All rights reserved.
//

#import "AMenuPanelController.h"
#import "AMenuOpAuthView.h"
#import "AMenuOpInviteView.h"
#import "AMenuOpWaiteView.h"
#import "AMenuMrSelfView.h"
#import "AMenuMrOtherView.h"

static AMenuPanelController *menuPanel;

@implementation AMenuPanelController


+ (instancetype)shareInstance:(CGPoint)point member:(AHomeMember *)member{
    if (menuPanel) {
        float oldx = menuPanel.startPoint.x;
        [AMenuPanelController destroyInstance];
        
        if (point.x == oldx){
            return nil;
        }
    }
    
    if (menuPanel == nil) {
        menuPanel = [[AMenuPanelController alloc]initWithPoint:point andMember:member];
    }
    
    return menuPanel;
}

+ (void)destroyInstance {
    if (menuPanel) {
        [menuPanel offsetHidden];
    }
    
    menuPanel = nil;
}

- (instancetype)initWithPoint:(CGPoint)point andMember:(AHomeMember*)member {
    self = [super init];
    _startPoint = point;
    _member = member;
    
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self.view setFrame:CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height)];

    _menuPanelView = [self menuPanelViewNew];
    _menuPanelView.center = _startPoint;
    _menuPanelView.transform = CGAffineTransformMakeScale(0.001, 0.001);
    [self.view addSubview:_menuPanelView];
    
}

- (ABaseMenuView*)menuPanelViewNew {
    ABaseMenuView *menuView;
    
    switch (_member.memberState) {
        case StateAuth:
            menuView = [[AMenuOpAuthView alloc]initWithHomeMember:_member];
            break;
            
        case StateInvite:
            menuView = [[AMenuOpInviteView alloc]initWithHomeMember:_member];
            
            break;
            
        case StateWaitInvite:
            menuView = [[AMenuOpWaiteView alloc]initWithHomeMember:_member];
            break;
            
        case StateSelf:
            menuView = [[AMenuMrSelfView alloc]initWithHomeMember:_member];
            break;
            
        case StateOther:
            menuView = [[AMenuMrOtherView alloc]initWithHomeMember:_member];
            break;
            
        default:
            menuView = [[AMenuMrOtherView alloc]initWithHomeMember:_member];
            break;
    }
    
    return menuView;
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    _direction = DirectionDefault;
    if (_startPoint.x > [UIScreen mainScreen].bounds.size.width/2.) {
        _direction = DirectionLeft;
    } else if (_startPoint.x == [UIScreen mainScreen].bounds.size.width/2.) {
        _direction = DirectionUp;
    }
    
    [self offsetShow];
}

- (void)offsetShow {
    float centerx = _startPoint.x;
    float centery = _startPoint.y;
    
    switch (_direction) {
        case DirectionLeft:
            centerx -= 2*_menuPanelView.getViewSize.width/3.;
            centery -= _menuPanelView.getViewSize.height/3.;
            break;
            
        case DirectionUp:
            centery -= 2*_menuPanelView.getViewSize.height/3.;
            centerx += 40;
            break;
            
        case DirectionDown:
            centery += _menuPanelView.getViewSize.height;
            break;
            
        default:
            centerx += _menuPanelView.getViewSize.width/2.;
            centery -= _menuPanelView.getViewSize.height/3.;
            break;
    }
    
    [UIView animateWithDuration:.4 animations:^{
        _menuPanelView.transform = CGAffineTransformMakeScale(1., 1.);
        _menuPanelView.center = CGPointMake(centerx, centery);
        
    } completion:^(BOOL finished) {
        
    }];
}

- (void)offsetHidden {

    [UIView animateWithDuration:.4 animations:^{
        _menuPanelView.transform = CGAffineTransformMakeScale(.001, .001);
        _menuPanelView.center = _startPoint;
        _menuPanelView.alpha = .0;
        
    } completion:^(BOOL finished) {
        [self.view removeFromSuperview];
    }];
}

- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {
    for (UIView *view in self.view.subviews) {
        if ([view isKindOfClass:[_menuPanelView class]]) {
            [AMenuPanelController destroyInstance];
        }
    }
}

@end
