// Copyright (c) 2013 Mutual Mobile (http://mutualmobile.com/)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

#import "MMSideDrawerSectionHeaderView.h"
#import <QuartzCore/QuartzCore.h>
#import "PAImageView.h"
#import "AMainRootController.h"
#import "AUserCookie.h"
#import "AHomeUserServer.h"

@implementation MMSideDrawerSectionHeaderView

- (id)initWithFrame:(CGRect)frame {
    self = [super initWithFrame:frame];
    [self setBackgroundColor:[UIColor clearColor]];
    [self setClipsToBounds:YES];
    
    CGFloat avaterImageSize = 60.f;
    CGRect avaterRect = CGRectMake((self.bounds.size.width-avaterImageSize)/2-30,
                                   (self.bounds.size.height-avaterImageSize)/2, avaterImageSize, avaterImageSize);
    PAImageView *avaterImageView = [[PAImageView alloc]initWithFrame:avaterRect backgroundProgressColor:[UIColor whiteColor] progressColor:[UIColor whiteColor]];
    [self addSubview:avaterImageView];
    avaterImageView.tag = 10;
    NSString *url = @"http://e.hiphotos.baidu.com/image/w%3D2048/sign=5454ab5e0bf79052ef1f403e38cbd5ca/c75c10385343fbf2c6e17e6eb27eca8064388faa.jpg";
    [avaterImageView setImageURL:url];
    AUserCookie *userCookie =[AUserCookie userCookie];
    [[AServerFactory getServerInstance:@"AHomeUserServer"]selectUserInfoByUid:userCookie.serverId callback:^(AUser *user) {
        [[ASetting sharedInstance]setUserAvater:user.avatar];
        [avaterImageView setImageURL:user.avatar];
    } failureCallback:^(NSString *resp) {
        
    }];

    UITapGestureRecognizer *tapGesture=[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(handleTapGesture)];
    tapGesture.numberOfTapsRequired=1;
    [avaterImageView addGestureRecognizer:tapGesture];
    
    [[NSNotificationCenter defaultCenter] addObserverForName:@"UpdateMenuFaceNotification" object:nil
                                                       queue:[NSOperationQueue mainQueue] usingBlock:^(NSNotification * __unused notification) {
        NSString *obj = [notification object];
        [avaterImageView setImageURL:obj];
    }];
    
    return self;
}

- (void)handleTapGesture {
    [[AMainRootController sharedInstance]entryUserCenterView];
}

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"UpdateMenuFaceNotification" object:nil];
}

@end
