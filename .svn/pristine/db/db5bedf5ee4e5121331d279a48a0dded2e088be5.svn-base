//
//  AMergeHomeInfo.m
//  ahome
//
//  Created by andson-dile on 15/6/18.
//  Copyright (c) 2015å¹´ ushome. All rights reserved.
//

#import "AMergeHomeInfo.h"
#import "AUserCookie.h"

@implementation AMergeHomeInfo

- (instancetype)initWithHomeInfo:(NSArray*)homeInfos {
    self = [super init];
    self.members = [NSMutableArray array];

    AHomeInfo *mineHomeInfo = [homeInfos firstObject];
    NSMutableArray *mineHomeMembers = [NSMutableArray array];
    for (AHomeMember *member in mineHomeInfo.members) {
        AMergeHomeMember *homemember = [[AMergeHomeMember alloc]initWithMember:member photo:mineHomeInfo.photo familyId:mineHomeInfo.familyId];
        homemember.homeType = MineHomeType;
        [mineHomeMembers addObject:homemember];
    }

    AHomeInfo *parentHomeInfo = [homeInfos lastObject];
    NSMutableArray *parentHomeMembers = [NSMutableArray array];
    for (AHomeMember *member in parentHomeInfo.members) {
        AUserCookie *userCookie = [AUserCookie userCookie];
        if (userCookie.serverId == member.uid) continue;
        
        AMergeHomeMember *homemember = [[AMergeHomeMember alloc]initWithMember:member photo:parentHomeInfo.photo familyId:parentHomeInfo.familyId];
        homemember.homeType = ParentHomeType;
        [parentHomeMembers addObject:homemember];
    }
    
    if (mineHomeMembers.count >= parentHomeMembers.count) {
        _members = [NSMutableArray arrayWithArray:mineHomeMembers];
        for (AMergeHomeMember *mergeMemger in parentHomeMembers) {
            NSUInteger index = [parentHomeMembers indexOfObject:mergeMemger];
            [_members insertObject:mergeMemger atIndex:index*2+1];
        }
        
    } else if(mineHomeMembers.count < parentHomeMembers.count) {
        _members = [NSMutableArray arrayWithArray:parentHomeMembers];
        for (AMergeHomeMember *mergeMemger in mineHomeMembers) {
            NSUInteger index = [mineHomeMembers indexOfObject:mergeMemger];
            [_members insertObject:mergeMemger atIndex:index*2+1];
        }
    }

    __block NSUInteger memberNum = _members.count;
    float angle = 360./memberNum;
    for (AMergeHomeMember *homeMerge in _members) {
        NSUInteger index = [_members indexOfObject:homeMerge];
        homeMerge.angle = index*angle;
    }


    return self;
}

@end
