//
//  AFamilyBaseCircleController.m
//  ahome
//
//  Created by andson-dile on 15/7/2.
//  Copyright (c) 2015å¹´ ushome. All rights reserved.
//

#import "AFamilyBaseCircleController.h"
#import "MZBookShelfCollectionViewLayout.h"

@implementation AFamilyBaseCircleController

- (void)viewDidLoad {
    [super viewDidLoad];
    [self.view setBackgroundColor:[UIColor clearColor]];
    
    MZBookshelfCollectionViewLayout *flowLayout = [[MZBookshelfCollectionViewLayout alloc]init];
    flowLayout.itemSize = CGSizeMake(100, 150);
    flowLayout.sectionInset = UIEdgeInsetsMake(10.0f, 10.0f, 10.0, 10.0);
    
    [flowLayout registerNib:[UINib nibWithNibName:@"MZBookShelfDecorationView" bundle:nil] forDecorationViewOfKind:MZBookshelfCollectionViewLayoutDecorationViewKind];
    
    _collectionView = [[UICollectionView alloc] initWithFrame:
                       CGRectMake(0, 0, self.view.frame.size.width,
                                  self.view.frame.size.height) collectionViewLayout:flowLayout];
    
    
    [_collectionView registerClass:NSClassFromString(@"AFamilyCollectionView") forCellWithReuseIdentifier:@"Cell"];
    [_collectionView registerClass:NSClassFromString(@"AFamilyCollectionHeaderView") forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderView"];
    
    [_collectionView setAutoresizingMask:UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight];
    [_collectionView setBackgroundColor:[UIColor clearColor]];
    _collectionView.delegate = self;
    _collectionView.dataSource = self;
    
    _collectionView.showsVerticalScrollIndicator = NO;
    [self.view addSubview:_collectionView];
}

- (CGFloat)widthForSection:(NSInteger)section {
    UICollectionViewFlowLayout *layout = (id)_collectionView.collectionViewLayout;
    
    CGFloat availableWidth = layout.collectionViewContentSize.width - (layout.sectionInset.left + layout.sectionInset.right);
    int itemsAcross = floorf((availableWidth + layout.minimumInteritemSpacing) / (layout.itemSize.width + layout.minimumInteritemSpacing));
    int itemCount = (int)[layout.collectionView numberOfItemsInSection:section];
    int rows = ceilf(itemCount/(float)itemsAcross);
    CGFloat itemsInRow = ceilf((double)itemCount /rows);
    
    return itemsInRow * (layout.itemSize.width + layout.minimumInteritemSpacing) + (layout.sectionInset.left + layout.sectionInset.right);
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(MZBookshelfCollectionViewLayout *)collectionViewLayout referenceSizeForDecorationViewForRow:(NSInteger)row inSection:(NSInteger)section {
    
    if (section == 0) {
        if (collectionViewLayout.scrollDirection == UICollectionViewScrollDirectionHorizontal) {
            return CGSizeMake([self widthForSection:section], 113);
            
        } else {
            return CGSizeMake(collectionViewLayout.collectionViewContentSize.width, 113);
        }
    }
    
    return CGSizeZero;
}

- (UIOffset)collectionView:(UICollectionView *)collectionView layout:(MZBookshelfCollectionViewLayout *)collectionViewLayout decorationViewAdjustmentForRow:(NSInteger)row inSection:(NSInteger)section {
    return UIOffsetMake(0, 0);
}


- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return 5;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    UICollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"Cell" forIndexPath:indexPath];
    [cell setBackgroundColor:[UIColor redColor]];
    
    return cell;
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section {
    
    return CGSizeMake(self.view.frame.size.width, 20);
}

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath {
    UICollectionReusableView *reusableview = nil;
    
    if (kind == UICollectionElementKindSectionHeader) {
        UICollectionReusableView *headerView = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"HeaderView" forIndexPath:indexPath];
        reusableview = headerView;
    }
    
    [reusableview setBackgroundColor:[UIColor grayColor]];
    
    return reusableview;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    
}


@end
